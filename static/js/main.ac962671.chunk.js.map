{"version":3,"sources":["components/header.js","components/sidebarLeft.js","components/sidebarRight.js","components/welcome.js","actions/userActions.js","util/util.js","util/tiles.js","components/tile.js","components/board.js","components/rack.js","components/MainMiddle.js","components/main.js","reducers/pouchReducer.js","components/App.js","reducers/playersReducer.js","reducers/rootReducer.js","index.js"],"names":["Header","className","href","target","rel","connect","state","currentPlayer","players","dispatch","props","SideBarRight","Welcome","onClick","handleClickPlay","UPDATE_CURRENT_PLAYER","UPDATE_PLAYER_RACK","REMOVE_TILES_FROM_POUCH","updatePlayerRack","newRack","name","type","selectRandomTilesFromPouch","pouch","numTiles","max","tilesDrawn","pouchArr","length","randomIdx","Math","floor","random","tile","pop","push","deepCopy2DArr","arr","newArr","forEach","row","idx","slice","TILES","1","num","color","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","tileId","rowIdx","colIdx","playerRack","draggable","onDragStart","e","console","log","tileInfo","dataTransfer","setData","onDragOver","preventDefault","onDragEnter","onDrop","draggedTile","JSON","parse","getData","newPlayerRack","oldPlayerRack","droppedTile","col","tilesToShift","filter","numTimesToLoop","j","i","moveTileOnRack","Board","rows","map","rowTiles","tiles","Rack","player1Rack","MainMiddle","updateCurrentPlayer","removeTilesFromPouch","Set","firstRow","renderGame","this","React","Component","player1","Main","App","predefinedState","ai","oldState","action","Object","freeze","assign","add","newState","delete","rootReducer","combineReducers","store","createStore","document","addEventListener","window","getState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ac962671.chunk.js","sourcesContent":["function Header() {\n  return (\n    <div className=\"header-wrap\">\n      <div className=\"header-left\">\n        RUMMIKUB 2Player\n      </div>\n      <div className=\"header-right\">\n        <a \n          href=\"https://github.com/maxbildner/rummikub-ai\" \n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >GIT REPO</a>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;","import { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return ({\n    currentPlayer: state.players.currentPlayer\n  });\n};\n\n\nconst mapDispatchToProps = dispatch => {\n  return ({\n  });\n};\n\n\nfunction SideBarLeft(props) {\n  return (\n    <div className=\"sidebarleft-wrap\">\n      <div>Current Player: </div>\n      {props.currentPlayer}\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarLeft);","function SideBarRight() {\n  return (\n    <div className=\"sidebarright-wrap\">\n      SideBarRight\n    </div>\n  );\n}\n\nexport default SideBarRight;","\n\n\nfunction Welcome(props) {\n  return (\n    <div className=\"welcome-wrap\">\n      <div>Welcome! Press play to begin</div>\n      <button \n        className=\"play\"\n        onClick={props.handleClickPlay}\n      >PLAY</button>\n    </div>\n  );\n}\n\nexport default Welcome;","// use constants incase there's a typo, we fail loudly\nexport const UPDATE_CURRENT_PLAYER = \"UPDATE_CURRENT_PLAYER\";\nexport const UPDATE_PLAYER_RACK = \"UPDATE_PLAYER_RACK\";\nexport const REMOVE_TILES_FROM_POUCH = \"REMOVE_TILES_FROM_POUCH\";\n\n\n\n// ACTION CREATORS\nexport const updateCurrentPlayer = (name) => {\n\n  return ({\n    type: UPDATE_CURRENT_PLAYER,\n    name\n  });\n}\n\n\nexport const updatePlayerRack = (newRack, name) => {\n\n  return ({\n    type: UPDATE_PLAYER_RACK,\n    newRack,\n    name\n  });\n}\n\n\n// tiles == tiles to delete from pouch\nexport const removeTilesFromPouch = (tiles) => {\n\n  return ({\n    type: REMOVE_TILES_FROM_POUCH,\n    tiles\n  });\n}","// HELPER FUNCTIONS\n\n// SELECT RANDOM NUM FROM 0 to MAX (inclusive of both)\nexport function getRandomInt(max) {\n  return Math.floor(Math.random() * max + 1);\n}\n\n\n// RETURNS ARRAY OF TILE NUMS FROM POUCH (non-mutative of inputs)\n// pouch == SET { 1, 2, ... 106 }\n// numTiles == 14\n// return ex. => [ 1, 2 ]       // nums refer to tileIDs\nexport function selectRandomTilesFromPouch(pouch, numTiles) {\n  let tilesDrawn = [];\n\n  // create array of set values (tiles)   O(N) TIME, N = pouch size\n  let pouchArr = [...pouch];\n\n  // select random tile from pouch numTiles times\n  while (tilesDrawn.length < numTiles) {\n\n    // select random idx in pouchArr\n    let randomIdx = getRandomInt(pouchArr.length - 1);\n  \n    // swap last num in pouchArr w/ num @ randomIdx\n    [ pouchArr[pouchArr.length - 1], pouchArr[randomIdx] ] =\n    [ pouchArr[randomIdx], pouchArr[pouchArr.length - 1] ];\n\n    // tile integer refers to tileId        O(1) TIME\n    let tile = pouchArr.pop();\n\n    // add to tilesDrawn array\n    tilesDrawn.push(tile);\n  }\n\n  return tilesDrawn;\n}\n\n\n// DEEP COPY 2D ARRAY\n// [ [null, null], [1, 2] ] => [ [null, null], [1, 2] ]\nexport function deepCopy2DArr(arr) {\n  let newArr = [];\n\n  arr.forEach((row, idx) => {\n    newArr.push(row.slice());\n  });\n\n  return newArr;\n}\n\n\n\n// MOVES TILE FROM DRAGGED TO DROPPED\n// returns new 2d array rack of tiles\n// draggedTile == { row: 0, col: 0, tileId: 32 }\n// droppedTile == { row: 1, col: 2, tileId: 1 }\nexport function moveTileOnRack(oldPlayerRack, draggedTile, droppedTile) {\n\n  let newPlayerRack = deepCopy2DArr(oldPlayerRack);\n\n  let isDroppedLocationEmpty = droppedTile.tileId === null;\n\n  if (isDroppedLocationEmpty) {\n    \n    // update dropped tile location w/ dragged tile id\n    newPlayerRack[droppedTile.row][droppedTile.col] = draggedTile.tileId;\n    \n    // dropping on location w/ tile, so move tiles\n  } else {\n    \n    // grab tiles from dropped location to end of row (null)\n    let tilesToShift = oldPlayerRack[droppedTile.row].slice(droppedTile.col);\n    \n    // remove nulls at end\n    tilesToShift = tilesToShift.filter(tile => tile !== null);\n    \n    debugger\n\n    // update dropped tile location w/ dragged tile id\n    newPlayerRack[droppedTile.row][droppedTile.col] = draggedTile.tileId;\n    \n    debugger\n\n    // number of tiles from dropped (exclusive) to end / null\n    let numTimesToLoop = droppedTile.col + tilesToShift.length + 1;\n\n    let j = 0;\n\n    // loop from dropped tile's idx + 1 number of times == tilesToShift\n    for (let i = droppedTile.col + 1; i < numTimesToLoop; i++ ) {\n      \n      debugger\n      // update dropped tile location w/ dragged tile id\n      newPlayerRack[droppedTile.row][i] = tilesToShift[j];\n\n      j++;\n      debugger\n    }\n\n    debugger\n  }\n\n\n  // update dragged tile location empty\n  newPlayerRack[draggedTile.row][draggedTile.col] = null;\n\n  return newPlayerRack;\n}","export const TILES = {\n  1: { num:1, color:'BLACK'},\n  2: { num:2, color:'BLACK'},\n  3: { num:3, color:'BLACK'},\n  4: { num:4, color:'BLACK'},\n  5: { num:5, color:'BLACK'},\n  6: { num:6, color:'BLACK'},\n  7: { num:7, color:'BLACK'},\n  8: { num:8, color:'BLACK'},\n  9: { num:9, color:'BLACK'},\n  10: { num:10, color:'BLACK'},\n  11: { num:11, color:'BLACK'},\n  12: { num:12, color:'BLACK'},\n  13: { num:13, color:'BLACK'},\n  14: { num:1, color:'BLACK'},\n  15: { num:2, color:'BLACK'},\n  16: { num:3, color:'BLACK'},\n  17: { num:4, color:'BLACK'},\n  18: { num:5, color:'BLACK'},\n  19: { num:6, color:'BLACK'},\n  20: { num:7, color:'BLACK'},\n  21: { num:8, color:'BLACK'},\n  22: { num:9, color:'BLACK'},\n  23: { num:10, color:'BLACK'},\n  24: { num:11, color:'BLACK'},\n  25: { num:12, color:'BLACK'},\n  26: { num:13, color:'BLACK'},\n\n  27: { num: 1, color: 'BLUE' },\n  28: { num: 2, color: 'BLUE' },\n  29: { num: 3, color: 'BLUE' },\n  30: { num: 4, color: 'BLUE' },\n  31: { num: 5, color: 'BLUE' },\n  32: { num: 6, color: 'BLUE' },\n  33: { num: 7, color: 'BLUE' },\n  34: { num: 8, color: 'BLUE' },\n  35: { num: 9, color: 'BLUE' },\n  36: { num: 10, color: 'BLUE' },\n  37: { num: 11, color: 'BLUE' },\n  38: { num: 12, color: 'BLUE' },\n  39: { num: 13, color: 'BLUE' },\n  40: { num: 1, color: 'BLUE' },\n  41: { num: 2, color: 'BLUE' },\n  42: { num: 3, color: 'BLUE' },\n  43: { num: 4, color: 'BLUE' },\n  44: { num: 5, color: 'BLUE' },\n  45: { num: 6, color: 'BLUE' },\n  46: { num: 7, color: 'BLUE' },\n  47: { num: 8, color: 'BLUE' },\n  48: { num: 9, color: 'BLUE' },\n  49: { num: 10, color: 'BLUE' },\n  50: { num: 11, color: 'BLUE' },\n  51: { num: 12, color: 'BLUE' },\n  52: { num: 13, color: 'BLUE' },\n\n  53: { num: 1, color: 'RED' },\n  54: { num: 2, color: 'RED' },\n  55: { num: 3, color: 'RED' },\n  56: { num: 4, color: 'RED' },\n  57: { num: 5, color: 'RED' },\n  58: { num: 6, color: 'RED' },\n  59: { num: 7, color: 'RED' },\n  60: { num: 8, color: 'RED' },\n  61: { num: 9, color: 'RED' },\n  62: { num: 10, color: 'RED' },\n  63: { num: 11, color: 'RED' },\n  64: { num: 12, color: 'RED' },\n  65: { num: 13, color: 'RED' },\n  66: { num: 1, color: 'RED' },\n  67: { num: 2, color: 'RED' },\n  68: { num: 3, color: 'RED' },\n  69: { num: 4, color: 'RED' },\n  70: { num: 5, color: 'RED' },\n  71: { num: 6, color: 'RED' },\n  72: { num: 7, color: 'RED' },\n  73: { num: 8, color: 'RED' },\n  74: { num: 9, color: 'RED' },\n  75: { num: 10, color: 'RED' },\n  76: { num: 11, color: 'RED' },\n  77: { num: 12, color: 'RED' },\n  78: { num: 13, color: 'RED' },\n\n  79: { num: 1, color: 'GREEN' },\n  80: { num: 2, color: 'GREEN' },\n  81: { num: 3, color: 'GREEN' },\n  82: { num: 4, color: 'GREEN' },\n  83: { num: 5, color: 'GREEN' },\n  84: { num: 6, color: 'GREEN' },\n  85: { num: 7, color: 'GREEN' },\n  86: { num: 8, color: 'GREEN' },\n  87: { num: 9, color: 'GREEN' },\n  88: { num: 10, color: 'GREEN' },\n  89: { num: 11, color: 'GREEN' },\n  90: { num: 12, color: 'GREEN' },\n  91: { num: 13, color: 'GREEN' },\n  92: { num: 1, color: 'GREEN' },\n  93: { num: 2, color: 'GREEN' },\n  94: { num: 3, color: 'GREEN' },\n  95: { num: 4, color: 'GREEN' },\n  96: { num: 5, color: 'GREEN' },\n  97: { num: 6, color: 'GREEN' },\n  98: { num: 7, color: 'GREEN' },\n  99: { num: 8, color: 'GREEN' },\n  100: { num: 9, color: 'GREEN' },\n  101: { num: 10, color: 'GREEN' },\n  102: { num: 11, color: 'GREEN' },\n  103: { num: 12, color: 'GREEN' },\n  104: { num: 13, color: 'GREEN' },\n\n  // JOKERS\n  105: { num: 14, color: 'RED' },\n  106: { num: 15, color: 'BLACK' }\n}","import { connect } from 'react-redux';\nimport { TILES } from '../util/tiles';\nimport { \n  moveTileOnRack\n} from '../util/util';\nimport { updatePlayerRack } from '../actions/userActions';\n\n\nconst mapStateToProps = state => {\n  return ({\n  });\n};\n\n\nconst mapDispatchToProps = dispatch => {\n  return ({\n    updatePlayerRack: (newRack, name) => dispatch(updatePlayerRack(newRack, name))\n  });\n};\n\n\nfunction Tile(props) {\n\n  const { tileId, rowIdx, colIdx, playerRack, updatePlayerRack } = props;\n\n  return (\n    <div \n      // if tileId not null, add it's COLOR to class name, make it draggable\n      className={tileId ? \"tile-wrap \" + TILES[tileId].color : \"tile-wrap\" }\n      draggable={tileId ? true : false}\n\n      // run callback once user starts to drag tile\n      onDragStart={e => {\n        console.log('START');\n        \n        // string representation of JSON object\n        let tileInfo = `{ \"row\": ${rowIdx}, \"col\": ${colIdx}, \"tileId\": ${tileId} }`\n\n        // put string obj in draggable payload\n        e.dataTransfer.setData(\"draggedTile\", tileInfo)\n      }}\n\n      onDragOver={e => {\n        console.log('OVER');\n        e.preventDefault();\n      }}\n\n      onDragEnter={e => {\n        console.log('ENTER');\n        e.preventDefault();\n      }}\n\n      onDrop={e => {\n        console.log('DROP');\n        // e.dataTransfer.getData(\"draggedTile\") == '{ \"row\": 0, \"col\": 12, \"tileId\": 16 }'\n\n        // convert string to OBJ\n        let draggedTile = JSON.parse(e.dataTransfer.getData(\"draggedTile\"));\n\n        // dropped tile info\n        let droppedTile = { row: rowIdx, col: colIdx, tileId: tileId };\n\n        // move tile, update rack\n        let newPlayerRack = moveTileOnRack(playerRack, draggedTile, droppedTile);\n\n        // update redux store\n        updatePlayerRack(newPlayerRack, 'player1');\n      }}\n    >\n      \n      {/* If tileId null, empty slot in rack */}\n      {props.tileId ? TILES[props.tileId].num : null}\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tile);","import Tile from './tile';\n\n\nfunction Board() {\n  // 6 x 16\n  let grid = [\n    [ null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null ],\n    [ null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null ],\n    [ null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null ],\n    [ null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null ],\n    [ null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null ],\n    [ null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null ]\n  ];\n\n  // generate 6 rows\n  let rows = grid.map((row, idx) => {\n\n    // each row will contain 16 tiles\n    var rowTiles = row.map((tiles, i) => {\n      return (\n        <Tile key={(idx + 1) + i} className=\"tile-wrap\"/>\n      );\n    });\n\n    return (\n      <div \n        className=\"board-row\"\n        key={idx}\n      >\n        {rowTiles}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"board-wrap\">\n      {rows}\n    </div>\n  );\n}\n\nexport default Board;","import TileContainer from './tile';\nimport React from 'react';\n\n\nfunction Rack(props) {\n\n  const { player1Rack } = props;    \n\n  // player1Rack 3 x 16 == \n  // let grid = [\n  //   [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],\n  //   [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],\n  //   [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]\n  // ];\n\n  // generate 3 rows\n  let rows = player1Rack.map((row, rowIdx) => {\n    \n    // each row will contain 16 tiles\n    var rowTiles = row.map((tileId, colIdx) => {\n      \n      return (\n        <TileContainer\n          key={(rowIdx + 1) + colIdx} \n          className=\"rack-tile-wrap\" \n          tileId={tileId}\n          rowIdx={rowIdx}\n          colIdx={colIdx}\n          playerRack={player1Rack}\n        />\n      );\n    });\n\n    return (\n      <div\n        className=\"rack-row\"\n        key={rowIdx}\n      >\n        {rowTiles}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"rack-wrap\">\n      {rows}\n    </div>\n  );\n}\n\nexport default Rack;","import React from 'react';\nimport Welcome from './welcome';\nimport { connect } from 'react-redux';\nimport { \n  updateCurrentPlayer,\n  updatePlayerRack,\n  removeTilesFromPouch\n} from '../actions/userActions';\nimport {\n  selectRandomTilesFromPouch,\n  deepCopy2DArr\n} from '../util/util';\nimport Board from './board';\nimport Rack from './rack';\n\n\nconst mapStateToProps = state => {\n  return ({\n    currentPlayer: state.players.currentPlayer,\n    pouch: state.pouch,\n    player1Rack: state.players.player1\n  });\n};\n\n\nconst mapDispatchToProps = dispatch => {\n  return({\n    updateCurrentPlayer: (name) => dispatch(updateCurrentPlayer(name)),\n    updatePlayerRack: (newRack, name) => dispatch(updatePlayerRack(newRack, name)),\n    removeTilesFromPouch: (tiles) => dispatch(removeTilesFromPouch(tiles))\n  });\n};\n\n\nclass MainMiddle extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n\n  handleClickPlay = () => {\n    const { \n      pouch, updateCurrentPlayer, removeTilesFromPouch, updatePlayerRack,\n      player1Rack\n    } = this.props;\n\n    // update redux store\n    updateCurrentPlayer('player1');\n\n    // copy pouch so we don't accidently mutate it directly\n    let newPouch = new Set(pouch);\n\n    // randomly select 14 tiles from pouch\n    let tilesDrawn = selectRandomTilesFromPouch(newPouch, 16);\n    // tilesDrawn == [77, 42, 45, 17, 84, 61, 27, 36, 39, 96, 26, 55, 56, 40]\n\n    // update redux store\n    removeTilesFromPouch(tilesDrawn);\n    \n    let newRack = deepCopy2DArr(player1Rack);\n    // newRack == [ [n, n, n,...], [], [] ]\n\n    let firstRow = newRack[0];\n\n    // loop through 1st row of newRack\n    for (let i = 0; i < firstRow.length; i++) {\n      \n      // exit loop if no more tiles left from tilesDrawn array\n      if (tilesDrawn.length === 0) break;\n\n      // update newRack with tile drawn, and remove tile from tilesDrawn\n      newRack[0][i] = tilesDrawn.pop();\n    }\n    \n    // update redux store- replace rack in player1 w/ newRack array\n    updatePlayerRack(newRack, 'player1');\n  }\n\n\n  renderGame = ()=> {\n    // const { player1Rack } = this.props || [[]];\n    const { player1Rack } = this.props;\n\n    return (\n      <>\n        <Board />\n        <Rack player1Rack={player1Rack}/>\n      </>\n    );\n  }\n\n\n  render() {\n    const { currentPlayer } = this.props;\n\n    return (\n      <div className=\"mainmiddle-wrap\">\n        {currentPlayer ? this.renderGame(): <Welcome handleClickPlay={this.handleClickPlay}/>}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainMiddle);","import SideBarLeft from './sidebarLeft';\nimport SideBarRight from './sidebarRight';\nimport MainMiddleContainer from './MainMiddle';\n\n\nfunction Main() {\n  return (\n    <div className=\"main-wrap\">\n      <SideBarLeft />\n      <MainMiddleContainer />\n      <SideBarRight />\n    </div>\n  );\n}\n\nexport default Main;","// import { UPDATE_PLAYER_RACK } from '../actions/userActions';\nimport { REMOVE_TILES_FROM_POUCH } from '../actions/userActions';\n\n\n// prepopulated players slice of store\nconst predefinedState = new Set();\n\n// add 106 tiles to pouch (tiles 105 and 106 are jokers)\nfor (let i = 1; i <= 106; i++) {\n  predefinedState.add(i);\n}\n\n// predefinedState == SET { 55, 52, ... }        (nums refer to tile IDs)\n\n\nconst pouch = (oldState = predefinedState, action) => {\n\n  // prevent us from accidentally mutating state\n  Object.freeze(oldState);\n\n  let newState;\n\n  switch (action.type) {\n\n    // deletes tiles in pouch that have id's in action.newTiles\n    // case UPDATE_PLAYER_RACK:\n    case REMOVE_TILES_FROM_POUCH:\n\n      // copy oldState into new state to avoid overwriting oldState\n      newState = new Set(oldState);\n\n      // action.name == 'Player1'\n      // action.tiles == []     nums refer to tileIds, idx's refer to position in player rack\n\n      // loop over tiles, delete tile in pouch\n      for (let i = 0; i < action.tiles.length; i++) {\n        newState.delete(action.tiles[i]);\n      }\n\n      return newState;\n\n    default:\n      return oldState;\n  }\n};\n\n\nexport default pouch;","import Header from './header';\nimport Main from './main';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// import { merge } from 'lodash';\nimport { \n  UPDATE_CURRENT_PLAYER,\n  UPDATE_PLAYER_RACK\n} from '../actions/userActions';\n\n\n// EXAMPLE REDUX STORE\n// {\n//    players: {\n//      player1: [                  ARRAY (idx's refer to position on rack, nums refer to tileIds)\n//       [ null, null, null, ...],  \n//       [ 1,    2,    3,    ...], \n//       [ null, null, null, ...], \n//      ],    \n//      ai:      { 13, 14, ... },   SET (no rack, no need to maintain order)\n//      currentPlayer: 'player1',   STRING (also can be null or 'ai')\n//    },\n//\n//    board: {\n//      runs: {\n//        0: [ 0, 1, 2, ... ],      ARRAY (nums refer to tile IDs)\n//        1: [ 3, 4, 5, ... ],      ARRAY (nums refer to tile IDs)\n//      }\n//      groups: { \n//        0: [ 6, 19, 33, ... ],    ARRAY (nums refer to tile IDs)\n//      },\n//    },\n//\n//    pouch: { 55, 52, ... }        SET (nums refer to tile IDs)\n//\n//    boughtIn: {\n//      player1: false,             BOOLEAN\n//      ai: false,                  BOOLEAN\n//    },\n//    \n//    timeRemaining:                DATEOBJ\n//\n// }\n\n\n// prepopulated players slice of store\nconst predefinedState = {\n  player1: [\n    [ null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null ],\n    [ null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null ],\n    [ null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null ]\n  ],\n  ai: new Set(),\n  currentPlayer: null\n};\n\n\nconst players=(oldState=predefinedState, action) => {\n  \n  // prevent us from accidentally mutating state\n  Object.freeze(oldState);\n\n  let newState;\n\n  switch (action.type) {\n    case UPDATE_CURRENT_PLAYER:\n      newState = Object.assign({}, oldState, {\n        currentPlayer: action.name\n      });\n\n      return newState;\n\n    case UPDATE_PLAYER_RACK:\n      // action.name == 'Player1'\n      // action.newRack == [ 1, null, 3, 10, ... ]  idx's refer to position on rack\n\n      // replace player rack array w/ new Rack\n      newState = Object.assign({}, oldState, {\n        [action.name]: action.newRack\n      });\n\n      return newState;\n\n    default:\n      return oldState;\n  }\n};\n\n\nexport default players;","import { combineReducers } from 'redux';\nimport players from './playersReducer';\nimport pouch from './pouchReducer';\n\n\nconst rootReducer = combineReducers({\n  players,\n  pouch\n});\n\nexport default rootReducer;\n\n\n// EXAMPLE REDUX STORE\n// {\n//    players: {\n//      player1: [                  ARRAY (idx's refer to position on rack, nums refer to tileIds)\n//       [ null, null, null, ...],  \n//       [ 1,    2,    3,    ...], \n//       [ null, null, null, ...], \n//      ],    \n//      ai:      { 13, 14, ... },   SET (no rack, no need to maintain order)\n//      currentPlayer: 'player1',   STRING (also can be null or 'ai')\n//    },\n//\n//    board: {\n//      runs: {\n//        0: [ 0, 1, 2, ... ],      ARRAY (nums refer to tile IDs)\n//        1: [ 3, 4, 5, ... ],      ARRAY (nums refer to tile IDs)\n//      }\n//      groups: { \n//        0: [ 6, 19, 33, ... ],    ARRAY (nums refer to tile IDs)\n//      },\n//    },\n//\n//    pouch: { 55, 52, ... }        SET (nums refer to tile IDs)\n//\n//    boughtIn: {\n//      player1: false,             BOOLEAN\n//      ai: false,                  BOOLEAN\n//    },\n//    \n//    timeRemaining:                DATEOBJ\n//\n// }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/rootReducer';\n\n// ENTRY POINT FILE\n\n// create redux store\nconst store = createStore(rootReducer);\n\n\n// wait for DOM to load, then render components\ndocument.addEventListener('DOMContentLoaded', () => {\n\n  // FOR TESTING\n  // ************************************************************\n  window.getState = store.getState;\n  window.dispatch = store.dispatch;\n  // ************************************************************\n  \n  // Provider allows App component access to redux store\n  // grab html element by id = root, and render App Component\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n});\n\n\n\n"],"sourceRoot":""}